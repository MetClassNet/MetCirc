% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plottingFunctions.R
\name{highlight}
\alias{highlight}
\title{Add links and highlight sectors}
\usage{
highlight(groupname, ind, LinkDf, colour=NULL, transparency=0.4, links=TRUE)
}
\arguments{
\item{groupname}{\code{character} vector containing "group" and "name" to 
display, that is a unique identifier of the features, "group" and "name" have 
to be separated by \code{"_"} where "group" is the first and "name" is the 
last element}

\item{ind}{\code{numeric}, indices which will be highlighted}

\item{colour}{\code{NULL} or \code{character}, colour defines the colours which 
are used for plotting, if \code{NULL} default colours are used}

\item{transparency}{\code{numeric}, defines the transparency of the colours}

\item{links}{\code{logical}, should links of unselected features be plotted}

\item{LinkDf}{\code{data.frame}, in each row there is information about 
features to be connected}
}
\value{
The function will update an existing plot by highlighting a 
 specified sector and connected links.
}
\description{
A function to add links and highlight sectors to an initialised
     and plotted \code{circlize} plot with one track.
}
\details{
Internal use for \code{shinyCircos} or outside of \code{shinyCircos}
 to reproduce the figure.
}
\examples{
 ## load binnedMSP
 data("binnedMSP", package="MetCirc")
 ## use only a selection 
 binnedMSP <- binnedMSP[c(1:20, 29:48, 113:132, 240:259),]
 similarityMat <- createSimilarityMatrix(binnedMSP)
 ## order similarityMat according to retentionTime and update rownames
 simM <- orderSimilarityMatrix(similarityMat, order="retentionTime")
 ## create link matrix
 linkDf <- createLinkDf(similarityMatrix=simM, 
     threshold_low=0.95, threshold_high=1)
 ## cut link matrix (here: only display links between groups)
 linkDf_cut <- cutLinkDf(linkDf, type="inter")
 ## set circlize parameters
 circos.par(gap.degree=0, cell.padding=c(0.0, 0, 0.0, 0), 
         track.margin=c(0.0, 0))
 groupname <- rownames(simM)
 ## here: set selectedFeatures arbitrarily
 indSelected <- c(2,23,42,62)
 selectedFeatures <- groupname[indSelected]
 ## actual plotting
 plotCircos(groupname, linkDf_cut, initialize=TRUE, 
     featureNames=TRUE, cexFeatureNames=0.2, groupSector=TRUE, 
     groupName=FALSE, links=FALSE, highlight=TRUE)
 ## highlight
 highlight(groupname=groupname, ind=indSelected, LinkDf=linkDf_cut, 
     colour=NULL, transparency=0.4, links=TRUE)
}
\author{
Thomas Naake, \email{thomasnaake@googlemail.com}
}
